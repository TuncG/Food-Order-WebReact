{"ast":null,"code":"var _jsxFileName = \"E:\\\\React projects\\\\Food-Order-Web\\\\main\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCart = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cardReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.amount * action.item.price;\n    const existingCartItemCheck = state.items.findIndex(item => item.id === action.item.id);\n    const exisitingCartitem = state.items[existingCartItemCheck];\n    let updatedItems;\n\n    if (exisitingCartitem) {\n      const updatedItem = { ...exisitingCartitem,\n        amount: exisitingCartitem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemCheck] = updatedItem;\n    } else {\n      const updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REM\") {}\n\n  return defaultCart;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cardReducer, defaultCart);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REM\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"hY+geE+8N+zzJQrb463cEElobYM=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["E:/React projects/Food-Order-Web/main/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCart","items","totalAmount","cardReducer","state","action","type","updatedTotalAmount","item","amount","price","existingCartItemCheck","findIndex","id","exisitingCartitem","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,WAAW,EAAE;AAFK,CAApB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,MAAZ,GAAqBJ,MAAM,CAACG,IAAP,CAAYE,KADvD;AAGA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC3BJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADN,CAA9B;AAIA,UAAMC,iBAAiB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAA1B;AAEA,QAAII,YAAJ;;AACA,QAAID,iBAAJ,EAAuB;AACrB,YAAME,WAAW,GAAG,EAClB,GAAGF,iBADe;AAElBL,QAAAA,MAAM,EAAEK,iBAAiB,CAACL,MAAlB,GAA2BJ,MAAM,CAACG,IAAP,CAAYC;AAF7B,OAApB;AAIAM,MAAAA,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAf;AACAc,MAAAA,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;AACD,KAPD,MAOO;AACL,YAAMD,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAArB;AACD;;AAED,WAAO;AACLP,MAAAA,KAAK,EAAEc,YADF;AAELb,MAAAA,WAAW,EAAEK;AAFR,KAAP;AAID;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B,CAC1B;;AACD,SAAON,WAAP;AACD,CA/BD;;AAiCA,MAAMkB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCtB,UAAU,CAACI,WAAD,EAAcH,WAAd,CAAlD;;AAEA,QAAMsB,cAAc,GAAId,IAAD,IAAU;AAC/Ba,IAAAA,kBAAkB,CAAC;AAAEf,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMe,iBAAiB,GAAIV,EAAD,IAAQ;AAChCQ,IAAAA,kBAAkB,CAAC;AAAEf,MAAAA,IAAI,EAAE,KAAR;AAAeO,MAAAA,EAAE,EAAEA;AAAnB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMW,WAAW,GAAG;AAClBvB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADC;AAElBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFL;AAGlBuB,IAAAA,OAAO,EAAEH,cAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCart = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cardReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.amount * action.item.price;\r\n\r\n    const existingCartItemCheck = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const exisitingCartitem = state.items[existingCartItemCheck];\r\n\r\n    let updatedItems;\r\n    if (exisitingCartitem) {\r\n      const updatedItem = {\r\n        ...exisitingCartitem,\r\n        amount: exisitingCartitem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemCheck] = updatedItem;\r\n    } else {\r\n      const updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  if (action.type === \"REM\") {\r\n  }\r\n  return defaultCart;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(cardReducer, defaultCart);\r\n\r\n  const addItemHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemHandler = (id) => {\r\n    dispatchCartAction({ type: \"REM\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemHandler,\r\n    removeItem: removeItemHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}